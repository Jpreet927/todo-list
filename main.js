(()=>{"use strict";var __webpack_modules__={23:()=>{eval('\n;// CONCATENATED MODULE: ./src/tasks.js\nclass Task {\r\n    constructor(name, description, project, date) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.project = project;\r\n        this.date = date;\r\n    }\r\n}\r\n\r\n/* harmony default export */ const tasks = (Task);\n;// CONCATENATED MODULE: ./src/projects.js\nclass Project {\r\n    constructor(name, colour) {\r\n        this.name = name;\r\n        this.colour = colour;\r\n    }\r\n}\r\n\r\n/* harmony default export */ const projects = (Project);\n;// CONCATENATED MODULE: ./src/helpers.js\nfunction generateColour() {\r\n    let hue = Math.floor(Math.random()*360);\r\n    let sat = 90;\r\n    let light = 60;\r\n\r\n    let hslVal = `hsl(${hue}, ${sat}%, ${light}%)`;\r\n    return hslVal\r\n}\r\n\r\nfunction validateForm(...args) {\r\n    let fieldsFilled = true;\r\n    \r\n    args.forEach((input) => {\r\n        let inputText = input.value.trim();\r\n        if (inputText === \'\') {\r\n            if (input.parentElement.classList.contains(\'success\')){\r\n                input.parentElement.classList.remove(\'success\');\r\n            }\r\n            input.parentElement.classList.add(\'error\');\r\n        } else {\r\n            if (input.parentElement.classList.contains(\'error\')) {\r\n                input.parentElement.classList.remove(\'error\');\r\n            }\r\n            input.parentElement.classList.add(\'success\');\r\n        }\r\n    })\r\n\r\n    args.forEach((arg) => {\r\n        let argText = arg.value.trim();\r\n        console.log(arg);\r\n        console.log(argText);\r\n        if (argText === \'\') {\r\n            console.log("falseeee");\r\n            fieldsFilled = false;\r\n            return false\r\n        }\r\n    })\r\n\r\n    return fieldsFilled\r\n}\r\n\r\n// function validateForm(formNameInput, formDescInput) {\r\n//     let taskNameInput = formNameInput.value.trim();\r\n//     let taskDescInput = formDescInput.value.trim();\r\n    \r\n//     if (taskNameInput === \'\') {\r\n//         if (formNameInput.parentElement.classList.contains(\'success\')){\r\n//             formNameInput.parentElement.classList.remove(\'success\');\r\n//         }\r\n//         taskName.parentElement.classList.add(\'error\');\r\n//     } else {\r\n//         if (formNameInput.parentElement.classList.contains(\'error\')){\r\n//             formNameInput.parentElement.classList.remove(\'error\');\r\n//         }\r\n//         formNameInput.parentElement.classList.add(\'success\')\r\n//     }\r\n\r\n//     if (taskDescInput === \'\') {\r\n//         if (formDescInput.parentElement.classList.contains(\'success\')){\r\n//             formDescInput.parentElement.classList.remove(\'success\');\r\n//         }\r\n//         formDescInput.parentElement.classList.add(\'error\');\r\n//     } else {\r\n//         if (formDescInput.parentElement.classList.contains(\'error\')){\r\n//             formDescInput.parentElement.classList.remove(\'error\');\r\n//         }\r\n//         formDescInput.parentElement.classList.add(\'success\')\r\n//     }\r\n\r\n//     if (taskNameInput !== \'\' && taskDescInput !== \'\') {\r\n//         return true\r\n//     }\r\n// }\r\n\r\n\n;// CONCATENATED MODULE: ./src/dom.js\n\r\n\r\n\r\n\r\nlet taskExample1 = new tasks("Task Name", "Lorem Ipsum", "School", "2022-02-06");\r\nlet taskExample2 = new tasks("Task Name", "Lorem Ipsum", "School", "2022-02-06");\r\nlet taskExample3 = new tasks("Task Name", "Lorem Ipsum", "Work", "2022-02-06");\r\nlet project1 = new projects("All Tasks", "rgb(0, 0, 0)");\r\nlet project2 = new projects("School", "rgb(0, 140, 255)");\r\nlet project3 = new projects("Work", "rgb(229, 37, 82)");\r\nlet taskList = [];\r\nlet projectList = [];\r\n\r\ntaskList.push(taskExample1, taskExample2, taskExample3);\r\nprojectList.push(project1, project2, project3);\r\n\r\n// creates main page\r\nfunction renderPage() {\r\n    console.log(\'hello\');\r\n    let body = document.querySelector("body");\r\n    let header = document.createElement("header");\r\n    let mainSection = document.createElement("div");\r\n    let pageTitle = document.createElement("h3");\r\n    let toggleContainer = document.createElement("div");\r\n    let toggleIndicator = document.createElement("i");\r\n\r\n    pageTitle.textContent = "My To-Do List";\r\n    toggleContainer.classList.add("toggle-mode");\r\n    toggleIndicator.classList.add("toggle-btn");\r\n    toggleContainer.append(toggleIndicator);\r\n    header.append(pageTitle, toggleContainer);\r\n    mainSection.classList.add("main-body");\r\n    \r\n    let left = document.createElement("div");\r\n    let leftTitle = document.createElement("h1");\r\n    let newProjectBtn = document.createElement("div");\r\n    let newProjectIcon = document.createElement("img");\r\n    let newProjectText = document.createElement("p");\r\n    let projectUL = document.createElement("ul");\r\n    leftTitle.textContent = "Project List"\r\n    left.classList.add("left");\r\n    projectUL.classList.add("project-list");\r\n    newProjectIcon.src = "./images/plus.png";\r\n    newProjectText.textContent = "Add a Project"\r\n    newProjectBtn.classList.add("new-project");\r\n    newProjectBtn.append(newProjectIcon, newProjectText);\r\n    left.append(leftTitle, projectUL, newProjectBtn);\r\n\r\n    let right = document.createElement("div");\r\n    let rightTitle = document.createElement("h1");\r\n    let taskContainer = document.createElement("div");\r\n    let newTask = document.createElement("div");\r\n    let newTaskIcon = document.createElement("img");\r\n    let newTaskText = document.createElement("p");\r\n    rightTitle.textContent = "Task List";\r\n    right.classList.add("right");\r\n    taskContainer.classList.add("task-container");\r\n    newTask.classList.add("new-task");\r\n    newTaskIcon.src = "./images/plus.png";\r\n    newTaskText.textContent = "Add a Task";\r\n    newTask.append(newTaskIcon, newTaskText);\r\n    right.append(rightTitle, taskContainer, newTask);\r\n\r\n    mainSection.append(left, right);\r\n    body.append(header, mainSection);\r\n\r\n    toggleContainer.addEventListener(\'click\', toggleMode);\r\n\r\n    newProjectBtn.addEventListener(\'click\', () => {\r\n        renderProjectForm();\r\n    })\r\n\r\n    newTask.addEventListener(\'click\', () => {\r\n        renderTaskForm();\r\n    })\r\n    // addtask event listener\r\n    // add project event listener\r\n}\r\n\r\nfunction populatePage() {\r\n    projectList.forEach((project) => {\r\n        renderProject(project);\r\n    })\r\n\r\n    taskList.forEach((task) => {\r\n        renderTask(task);\r\n    })\r\n}\r\n\r\n// function to render single task and append to container\r\nfunction renderTask(task) {\r\n    let taskDiv = document.createElement("div");\r\n    let taskCategory = document.createElement("div");\r\n    let taskInformationContainer = document.createElement("div");\r\n    let taskHeader = document.createElement("div");\r\n    let taskTitleDetails = document.createElement("div");\r\n    let taskTitle = document.createElement("p");\r\n    let taskDate = document.createElement("p");\r\n    let iconsContainer = document.createElement("div");\r\n    let editTaskTitleForm = document.createElement("form");\r\n    let editTaskTitleInput = document.createElement("input");\r\n    let editTaskDateInput = document.createElement("input");\r\n    let editTaskSubmit = document.createElement("input");\r\n    let editBtn = document.createElement("img");\r\n    let checkBtn = document.createElement("img");\r\n    let deleteBtn = document.createElement("img");\r\n    let editDescriptionBtn = document.createElement("img");\r\n    let editDescriptionForm = document.createElement("form");\r\n    let editDescriptionInput = document.createElement("input");\r\n    let editDescriptionSubmit = document.createElement("input");\r\n    let detailsContainer = document.createElement("div");\r\n    let details = document.createElement("p");\r\n    let catColour = "";\r\n\r\n    projectList.forEach((project) => {\r\n        if (JSON.stringify(task.project) === JSON.stringify(project.name)) {\r\n            catColour = project.colour;\r\n        }\r\n    })\r\n\r\n    editDescriptionForm.id = "update-description-form";\r\n    editDescriptionForm.style.display = "none";\r\n    editDescriptionInput.id = "update-description";\r\n    editDescriptionInput.placeholder = "Add a new description"\r\n    editDescriptionSubmit.type = "submit";\r\n    editDescriptionSubmit.style.display = "none";\r\n    editDescriptionForm.append(editDescriptionInput, editDescriptionSubmit);\r\n\r\n    taskDiv.classList.add("task");\r\n    taskCategory.classList.add("task-category", "cat-grow");\r\n    taskInformationContainer.classList.add("task-information");\r\n    taskHeader.classList.add("task-title");\r\n    taskTitleDetails.classList.add("task-title-details");\r\n    taskTitle.classList.add("task-name");\r\n    taskDate.classList.add("task-date");\r\n    iconsContainer.classList.add("icons");\r\n    detailsContainer.classList.add("task-details", "details-visible");\r\n    editTaskTitleForm.id = "update-task-title-form";\r\n    editTaskTitleForm.style.display = "none";\r\n    editTaskTitleInput.id = "update-task-title";\r\n    editTaskTitleInput.placeholder = "Enter a new title";\r\n    editTaskDateInput.id = "update-task-date";\r\n    editTaskDateInput.placeholder = "Enter a new date";\r\n    editBtn.id = "edit";\r\n    checkBtn.id = "complete";\r\n    deleteBtn.id = "delete";\r\n    details.classList.add("task-description-text");\r\n    taskCategory.style.backgroundColor = catColour;\r\n    \r\n    taskTitle.textContent = task.name;\r\n    taskDate.textContent = task.date;\r\n    details.textContent = task.description;\r\n    editTaskSubmit.type = "submit";\r\n    editTaskSubmit.style.display = "none";\r\n    editBtn.src = "./images/edit2.png";\r\n    checkBtn.src = "./images/check.png";\r\n    deleteBtn.src = "./images/x.png";\r\n    editDescriptionBtn.src = "./images/edit2.png";\r\n    \r\n    editTaskTitleForm.append(editTaskTitleInput, editTaskDateInput, editTaskSubmit);\r\n    iconsContainer.append(editBtn, checkBtn, deleteBtn);\r\n    taskTitleDetails.append(taskTitle, taskDate);\r\n    taskHeader.append(editTaskTitleForm, taskTitleDetails, iconsContainer);\r\n    detailsContainer.append(editDescriptionBtn, editDescriptionForm, details);\r\n    taskInformationContainer.append(taskHeader, detailsContainer);\r\n    taskDiv.append(taskCategory, taskInformationContainer);\r\n\r\n    editBtn.addEventListener(\'click\', (e) => {\r\n        e.stopPropagation();\r\n        taskTitleDetails.style.display = "none";\r\n        editTaskTitleForm.style.display = "flex";\r\n    });\r\n\r\n    editDescriptionBtn.addEventListener(\'click\', (e) => {\r\n        e.stopPropagation();\r\n\r\n        editDescriptionForm.style.display = "flex";\r\n        details.style.display = "none";\r\n    })\r\n\r\n    editDescriptionInput.addEventListener(\'click\', (e) => {\r\n        e.stopPropagation();\r\n    })\r\n\r\n    editDescriptionSubmit.addEventListener(\'click\', (e) => {\r\n        e.stopPropagation();\r\n    })\r\n\r\n    taskDiv.addEventListener(\'click\', expandTask);\r\n    deleteBtn.addEventListener(\'click\', deleteTask);\r\n    checkBtn.addEventListener(\'click\', completeTask);\r\n    editTaskTitleForm.addEventListener(\'submit\', handleEditSubmit)\r\n    editDescriptionForm.addEventListener(\'submit\', handleDescSubmit)\r\n\r\n    let taskContainer = document.querySelector(".task-container");\r\n    taskContainer.appendChild(taskDiv);\r\n}\r\n\r\n// function to render single project and append to container\r\nfunction renderProject(projectDiv) {\r\n    let projectUL = document.querySelector(".project-list");\r\n    let projectLI = document.createElement("li");\r\n\r\n    projectLI.textContent = projectDiv.name;\r\n    projectUL.append(projectLI);\r\n\r\n    projectLI.addEventListener(\'click\', filterTasksByProject);\r\n}\r\n\r\n// function to render Task Creation Form\r\nfunction renderTaskForm() {\r\n    console.log(\'yerrr\');\r\n    let projectModal = document.createElement("div");\r\n    let taskForm = document.createElement("form");\r\n    let formHeader = document.createElement("div");\r\n    let formHeaderText = document.createElement("h1");\r\n    let formHeaderClose = document.createElement("img");\r\n    \r\n    projectModal.classList.add("modal");\r\n    formHeader.classList.add("form-header");\r\n    formHeaderClose.classList.add("form-close");\r\n    taskForm.id = "task-form";\r\n    formHeaderText.textContent = "New Task";\r\n    formHeaderClose.src = "./images/x.png";\r\n    formHeader.append(formHeaderText, formHeaderClose);\r\n\r\n    let formName = document.createElement("div");\r\n    let formNameLabel = document.createElement("label");\r\n    let formNameInput = document.createElement("input");\r\n    formName.classList.add("form-input");\r\n    formNameLabel.textContent = "Task Name";\r\n    formNameInput.id = "form-task-name";\r\n    formNameInput.placeholder = "Task Name";\r\n    formNameInput.type = "text";\r\n    formName.append(formNameLabel, formNameInput);\r\n    \r\n    let formDesc = document.createElement("div");\r\n    let formDescLabel = document.createElement("label");\r\n    let formDescInput = document.createElement("textarea");\r\n    formDesc.classList.add("form-input");\r\n    formDescLabel.textContent = "Task Description";\r\n    formDescInput.id = "form-task-description";\r\n    formDescInput.placeholder = "Task Description";\r\n    formDescInput.cols = "30";\r\n    formDescInput.rows = "10";\r\n    formDesc.append(formDescLabel, formDescInput);\r\n\r\n    let formProject = document.createElement("div");\r\n    let formProjectLabel = document.createElement("label");\r\n    let formProjectList = document.createElement("select");\r\n    formProject.classList.add("form-input");\r\n    formProjectList.id = "task-project-name";\r\n    formProjectLabel.textContent = "Project";\r\n\r\n    //loop throught project list to create options\r\n    projectList.forEach((project) => {\r\n        let option = document.createElement("option");\r\n        option.textContent = project.name;\r\n        option.value = project.name;\r\n        formProjectList.append(option);\r\n    })\r\n\r\n    formProject.append(formProjectLabel, formProjectList);\r\n\r\n    let formDate = document.createElement("div");\r\n    let formDateLabel = document.createElement("label");\r\n    let formDateInput = document.createElement("input")\r\n    formDate.classList.add("form-input");\r\n    formDateInput.id = "date-select";\r\n    formDateInput.type = "date";\r\n    formDateLabel = "Finish Date";\r\n    formDate.append(formDateLabel, formDateInput);\r\n\r\n    let formSubmitBtn = document.createElement("button");\r\n    formSubmitBtn.id = "task-submit";\r\n    formSubmitBtn.textContent = "Submit";\r\n\r\n    taskForm.append(formHeader, formName, formDesc, formProject, formDate, formSubmitBtn);\r\n    projectModal.append(taskForm);\r\n\r\n    let body = document.querySelector("body");\r\n    body.insertBefore(projectModal, body.firstChild);\r\n\r\n    taskForm.addEventListener(\'submit\', (e) => {\r\n        e.preventDefault();\r\n        if (validateForm(formNameInput, formDescInput)) {\r\n            let taskNameInput = formNameInput.value.trim();\r\n            let taskDescInput = formDescInput.value.trim();\r\n            let projectInput = formProjectList.options[formProjectList.selectedIndex].value;\r\n            let taskDateInput = formDateInput.value;\r\n\r\n            let newTask = new tasks(taskNameInput, taskDescInput, projectInput, taskDateInput);\r\n            taskList.push(newTask);\r\n            renderTask(newTask);\r\n\r\n            deleteTaskForm();\r\n        };\r\n    })\r\n\r\n    formHeaderClose.addEventListener(\'click\', deleteTaskForm);\r\n}\r\n\r\n\r\n// function to render Project Creation Form\r\nfunction renderProjectForm() {\r\n    let projectModal = document.createElement("div");\r\n    let projectForm = document.createElement("form");\r\n    projectModal.classList.add("project-modal");\r\n    projectForm.id = "project-form";\r\n\r\n    let formHeader = document.createElement("div");\r\n    let formHeaderTitle = document.createElement("h1");\r\n    let formHeaderClose = document.createElement("img");\r\n    formHeaderTitle.textContent = "New Project";\r\n    formHeaderClose.src = "./images/x.png";\r\n    formHeader.classList.add("form-header");\r\n    formHeaderClose.classList.add("project-form-close");\r\n    formHeader.append(formHeaderTitle, formHeaderClose);\r\n\r\n    let formName = document.createElement("div");\r\n    let formNameLabel = document.createElement("label");\r\n    let formNameInput = document.createElement("input")\r\n    formName.classList.add("form-input");\r\n    formNameLabel.textContent = "Project Name";\r\n    formNameInput.id = "project-name";\r\n    formNameInput.type = "text";\r\n    formNameInput.placeholder = "Project Name";\r\n    formName.append(formNameLabel, formNameInput);\r\n\r\n    let formSubmitBtn = document.createElement("button");\r\n    formSubmitBtn.id = "project-submit";\r\n    formSubmitBtn.textContent = "Submit";\r\n\r\n    projectForm.append(formHeader, formName, formSubmitBtn);\r\n    projectModal.append(projectForm);\r\n\r\n    let body = document.querySelector("body");\r\n    body.insertBefore(projectModal, body.firstChild);\r\n\r\n    projectForm.addEventListener(\'submit\', (e) => {\r\n        e.preventDefault();\r\n        if (validateForm(formNameInput)) {\r\n            let projectNameInput = formNameInput.value.trim();\r\n            let projectColour = generateColour();\r\n            let newProject = new projects(projectNameInput, projectColour)\r\n            let newProjectOption = document.createElement("option");\r\n\r\n            newProjectOption.textContent = newProject.name;\r\n\r\n            projectList.push(newProject);\r\n            renderProject(newProject);\r\n\r\n            deleteProjectForm();\r\n        }\r\n    })\r\n\r\n    formHeaderClose.addEventListener(\'click\', deleteProjectForm);\r\n}\r\n\r\nfunction expandTask(e) {\r\n    // console.log(e.currentTarget);\r\n    if (e.currentTarget.classList.contains(\'task-expand\')) {\r\n        e.currentTarget.classList.remove(\'task-expand\');\r\n        e.currentTarget.querySelector(\'.task-details\').style.visibility = \'hidden\';\r\n    } else {\r\n        e.currentTarget.classList.add(\'task-expand\');\r\n        e.currentTarget.querySelector(\'.task-details\').style.visibility = \'visible\';\r\n    }\r\n}\r\n\r\nfunction deleteTask(e) {\r\n    this.parentNode.parentNode.parentNode.parentNode.remove(); //delete button\r\n    e.stopPropagation();\r\n}\r\n\r\nfunction completeTask(e) {\r\n    this.parentNode.parentNode.parentNode.firstChild.children[1].firstChild.classList.toggle(\'task-complete\');\r\n    e.stopPropagation();\r\n}\r\n\r\nfunction toggleMode(e) {\r\n    let header = document.querySelector(\'header\');\r\n    let left = document.querySelector(\'.left\');\r\n    let right = document.querySelector(\'.right\');\r\n    let tasks = document.querySelectorAll(\'.task-information\');\r\n\r\n    e.currentTarget.classList.toggle(\'toggle-active\');\r\n    header.classList.toggle(\'header-light\');\r\n    left.classList.toggle(\'left-light\');\r\n    right.classList.toggle(\'right-light\');\r\n    tasks.forEach((task) => {\r\n        task.classList.toggle(\'task-light\');\r\n    })\r\n}\r\n\r\nfunction deleteTaskForm() {\r\n    let body = document.querySelector("body");\r\n    body.firstElementChild.remove();\r\n}\r\n\r\nfunction deleteProjectForm() {\r\n    let body = document.querySelector("body");\r\n    body.firstElementChild.remove();\r\n}\r\n\r\nfunction handleEditSubmit(e) {\r\n    e.preventDefault();\r\n    console.log("submit working");\r\n\r\n    let taskName = document.querySelector(".task-name");\r\n    let taskDate = document.querySelector(".task-date");\r\n    let taskNameInput = document.getElementById("update-task-title");\r\n    let taskDateInput = document.getElementById("update-task-date");\r\n    let taskTitleDetails = document.querySelector(".task-title-details");\r\n    let editTaskTitleForm = document.getElementById("update-task-title-form");\r\n\r\n    \r\n    taskName.textContent = taskNameInput.value;\r\n    taskDate.textContent = taskDateInput.value;\r\n    \r\n    taskTitleDetails.style.display = "flex";\r\n    editTaskTitleForm.style.display = "none";\r\n\r\n}\r\n\r\nfunction handleDescSubmit(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log("edit desc submit working")\r\n\r\n    let taskDetails = document.querySelector(".task-description-text");\r\n    let editDetailsForm = document.getElementById("update-description-form");\r\n    let editDetailsInput = document.getElementById("update-description");\r\n\r\n    taskDetails.textContent = editDetailsInput.value;\r\n    taskDetails.style.display = "block";\r\n    editDetailsForm.style.display = "none";\r\n}\r\n\r\nfunction filterTasksByProject(e) {\r\n    let newTaskList = [];\r\n    \r\n    let taskContainer = document.querySelector(".task-container");\r\n    taskContainer.innerHTML = "";\r\n\r\n    if (e.target.textContent == "All Tasks") {\r\n        taskList.forEach((task) => {\r\n            renderTask(task);\r\n        })\r\n    } else {\r\n        taskList.forEach((task) => {\r\n            if (task.project == e.target.textContent) {\r\n                console.log(task.project);\r\n                newTaskList.push(task);\r\n            }\r\n        })\r\n    }\r\n\r\n    newTaskList.forEach((filteredTask) => {\r\n        renderTask(filteredTask);\r\n    })\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/index.js\n\r\n\r\nrenderPage();\r\npopulatePage();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///23\n')}},__webpack_exports__={};__webpack_modules__[23]()})();