(()=>{"use strict";var __webpack_modules__={23:()=>{eval('\n;// CONCATENATED MODULE: ./src/tasks.js\nclass Task {\n    constructor(name, description, project, date) {\n        this.name = name;\n        this.description = description;\n        this.project = project;\n        this.date = date;\n    }\n}\n\n/* harmony default export */ const tasks = (Task);\n;// CONCATENATED MODULE: ./src/projects.js\nclass Project {\n    constructor(name, colour) {\n        this.name = name;\n        this.colour = colour;\n    }\n}\n\n/* harmony default export */ const projects = (Project);\n;// CONCATENATED MODULE: ./src/helpers.js\nfunction generateColour() {\n    let hue = Math.floor(Math.random()*360);\n    let sat = 90;\n    let light = 60;\n\n    let hslVal = `hsl(${hue}, ${sat}%, ${light}%)`;\n    return hslVal\n}\n\nfunction validateForm(...args) {\n    let fieldsFilled = true;\n    \n    args.forEach((input) => {\n        let inputText = input.value.trim();\n        if (inputText === \'\') {\n            if (input.parentElement.classList.contains(\'success\')){\n                input.parentElement.classList.remove(\'success\');\n            }\n            input.parentElement.classList.add(\'error\');\n        } else {\n            if (input.parentElement.classList.contains(\'error\')) {\n                input.parentElement.classList.remove(\'error\');\n            }\n            input.parentElement.classList.add(\'success\');\n        }\n    })\n\n    args.forEach((arg) => {\n        let argText = arg.value.trim();\n        console.log(arg);\n        console.log(argText);\n        if (argText === \'\') {\n            console.log("falseeee");\n            fieldsFilled = false;\n            return false\n        }\n    })\n\n    return fieldsFilled\n}\n\n// function validateForm(formNameInput, formDescInput) {\n//     let taskNameInput = formNameInput.value.trim();\n//     let taskDescInput = formDescInput.value.trim();\n    \n//     if (taskNameInput === \'\') {\n//         if (formNameInput.parentElement.classList.contains(\'success\')){\n//             formNameInput.parentElement.classList.remove(\'success\');\n//         }\n//         taskName.parentElement.classList.add(\'error\');\n//     } else {\n//         if (formNameInput.parentElement.classList.contains(\'error\')){\n//             formNameInput.parentElement.classList.remove(\'error\');\n//         }\n//         formNameInput.parentElement.classList.add(\'success\')\n//     }\n\n//     if (taskDescInput === \'\') {\n//         if (formDescInput.parentElement.classList.contains(\'success\')){\n//             formDescInput.parentElement.classList.remove(\'success\');\n//         }\n//         formDescInput.parentElement.classList.add(\'error\');\n//     } else {\n//         if (formDescInput.parentElement.classList.contains(\'error\')){\n//             formDescInput.parentElement.classList.remove(\'error\');\n//         }\n//         formDescInput.parentElement.classList.add(\'success\')\n//     }\n\n//     if (taskNameInput !== \'\' && taskDescInput !== \'\') {\n//         return true\n//     }\n// }\n\n\n;// CONCATENATED MODULE: ./src/dom.js\n\n\n\n\nlet taskExample1 = new tasks("Task Name", "Lorem Ipsum", "School", "2022-02-06");\nlet taskExample2 = new tasks("Task Name", "Lorem Ipsum", "School", "2022-02-06");\nlet taskExample3 = new tasks("Task Name", "Lorem Ipsum", "Work", "2022-02-06");\nlet project1 = new projects("All Tasks", "rgb(0, 0, 0)");\nlet project2 = new projects("School", "rgb(0, 140, 255)");\nlet project3 = new projects("Work", "rgb(229, 37, 82)");\nlet taskList = [];\nlet projectList = [];\n\ntaskList.push(taskExample1, taskExample2, taskExample3);\nprojectList.push(project1, project2, project3);\n\n// creates main page\nfunction renderPage() {\n    console.log(\'hello\');\n    let body = document.querySelector("body");\n    let header = document.createElement("header");\n    let mainSection = document.createElement("div");\n    let pageTitle = document.createElement("h3");\n    let toggleContainer = document.createElement("div");\n    let toggleIndicator = document.createElement("i");\n\n    pageTitle.textContent = "My To-Do List";\n    toggleContainer.classList.add("toggle-mode");\n    toggleIndicator.classList.add("toggle-btn");\n    toggleContainer.append(toggleIndicator);\n    header.append(pageTitle, toggleContainer);\n    mainSection.classList.add("main-body");\n    \n    let left = document.createElement("div");\n    let leftTitle = document.createElement("h1");\n    let newProjectBtn = document.createElement("div");\n    let newProjectIcon = document.createElement("img");\n    let newProjectText = document.createElement("p");\n    let projectUL = document.createElement("ul");\n    leftTitle.textContent = "Project List"\n    left.classList.add("left");\n    projectUL.classList.add("project-list");\n    newProjectIcon.src = "../images/plus.png";\n    newProjectText.textContent = "Add a Project"\n    newProjectBtn.classList.add("new-project");\n    newProjectBtn.append(newProjectIcon, newProjectText);\n    left.append(leftTitle, projectUL, newProjectBtn);\n\n    let right = document.createElement("div");\n    let rightTitle = document.createElement("h1");\n    let taskContainer = document.createElement("div");\n    let newTask = document.createElement("div");\n    let newTaskIcon = document.createElement("img");\n    let newTaskText = document.createElement("p");\n    rightTitle.textContent = "Task List";\n    right.classList.add("right");\n    taskContainer.classList.add("task-container");\n    newTask.classList.add("new-task");\n    newTaskIcon.src = "../images/plus.png";\n    newTaskText.textContent = "Add a Task";\n    newTask.append(newTaskIcon, newTaskText);\n    right.append(rightTitle, taskContainer, newTask);\n\n    mainSection.append(left, right);\n    body.append(header, mainSection);\n\n    toggleContainer.addEventListener(\'click\', toggleMode);\n\n    newProjectBtn.addEventListener(\'click\', () => {\n        renderProjectForm();\n    })\n\n    newTask.addEventListener(\'click\', () => {\n        renderTaskForm();\n    })\n    // addtask event listener\n    // add project event listener\n}\n\nfunction populatePage() {\n    projectList.forEach((project) => {\n        renderProject(project);\n    })\n\n    taskList.forEach((task) => {\n        renderTask(task);\n    })\n}\n\n// function to render single task and append to container\nfunction renderTask(task) {\n    let taskDiv = document.createElement("div");\n    let taskCategory = document.createElement("div");\n    let taskInformationContainer = document.createElement("div");\n    let taskHeader = document.createElement("div");\n    let taskTitleDetails = document.createElement("div");\n    let taskTitle = document.createElement("p");\n    let taskDate = document.createElement("p");\n    let iconsContainer = document.createElement("div");\n    let editTaskTitleForm = document.createElement("form");\n    let editTaskTitleInput = document.createElement("input");\n    let editTaskDateInput = document.createElement("input");\n    let editTaskSubmit = document.createElement("input");\n    let editBtn = document.createElement("img");\n    let checkBtn = document.createElement("img");\n    let deleteBtn = document.createElement("img");\n    let editDescriptionBtn = document.createElement("img");\n    let editDescriptionForm = document.createElement("form");\n    let editDescriptionInput = document.createElement("input");\n    let editDescriptionSubmit = document.createElement("input");\n    let detailsContainer = document.createElement("div");\n    let details = document.createElement("p");\n    let catColour = "";\n\n    projectList.forEach((project) => {\n        if (JSON.stringify(task.project) === JSON.stringify(project.name)) {\n            catColour = project.colour;\n        }\n    })\n\n    editDescriptionForm.id = "update-description-form";\n    editDescriptionForm.style.display = "none";\n    editDescriptionInput.id = "update-description";\n    editDescriptionInput.placeholder = "Add a new description"\n    editDescriptionSubmit.type = "submit";\n    editDescriptionSubmit.style.display = "none";\n    editDescriptionForm.append(editDescriptionInput, editDescriptionSubmit);\n\n    taskDiv.classList.add("task");\n    taskCategory.classList.add("task-category", "cat-grow");\n    taskInformationContainer.classList.add("task-information");\n    taskHeader.classList.add("task-title");\n    taskTitleDetails.classList.add("task-title-details");\n    taskTitle.classList.add("task-name");\n    taskDate.classList.add("task-date");\n    iconsContainer.classList.add("icons");\n    detailsContainer.classList.add("task-details", "details-visible");\n    editTaskTitleForm.id = "update-task-title-form";\n    editTaskTitleForm.style.display = "none";\n    editTaskTitleInput.id = "update-task-title";\n    editTaskTitleInput.placeholder = "Enter a new title";\n    editTaskDateInput.id = "update-task-date";\n    editTaskDateInput.placeholder = "Enter a new date";\n    editBtn.id = "edit";\n    checkBtn.id = "complete";\n    deleteBtn.id = "delete";\n    details.classList.add("task-description-text");\n    taskCategory.style.backgroundColor = catColour;\n    \n    taskTitle.textContent = task.name;\n    taskDate.textContent = task.date;\n    details.textContent = task.description;\n    editTaskSubmit.type = "submit";\n    editTaskSubmit.style.display = "none";\n    editBtn.src = "../images/edit2.png";\n    checkBtn.src = "../images/check.png";\n    deleteBtn.src = "../images/x.png";\n    editDescriptionBtn.src = "../images/edit2.png";\n    \n    editTaskTitleForm.append(editTaskTitleInput, editTaskDateInput, editTaskSubmit);\n    iconsContainer.append(editBtn, checkBtn, deleteBtn);\n    taskTitleDetails.append(taskTitle, taskDate);\n    taskHeader.append(editTaskTitleForm, taskTitleDetails, iconsContainer);\n    detailsContainer.append(editDescriptionBtn, editDescriptionForm, details);\n    taskInformationContainer.append(taskHeader, detailsContainer);\n    taskDiv.append(taskCategory, taskInformationContainer);\n\n    taskDiv.addEventListener(\'click\', expandTask);\n    deleteBtn.addEventListener(\'click\', deleteTask);\n    checkBtn.addEventListener(\'click\', completeTask);\n\n    editBtn.addEventListener(\'click\', (e) => {\n        e.stopPropagation();\n        taskTitleDetails.style.display = "none";\n        editTaskTitleForm.style.display = "flex";\n    });\n\n    editDescriptionBtn.addEventListener(\'click\', (e) => {\n        e.stopPropagation();\n\n        editDescriptionForm.style.display = "flex";\n        details.style.display = "none";\n    })\n\n    editDescriptionInput.addEventListener(\'click\', (e) => {\n        e.stopPropagation();\n    })\n\n    editDescriptionSubmit.addEventListener(\'click\', (e) => {\n        e.stopPropagation();\n    })\n\n    editTaskTitleForm.addEventListener(\'submit\', handleEditSubmit)\n    editDescriptionForm.addEventListener(\'submit\', handleDescSubmit)\n\n    let taskContainer = document.querySelector(".task-container");\n    taskContainer.appendChild(taskDiv);\n}\n\n// function to render single project and append to container\nfunction renderProject(projectDiv) {\n    let projectUL = document.querySelector(".project-list");\n    let projectLI = document.createElement("li");\n\n    projectLI.textContent = projectDiv.name;\n    projectUL.append(projectLI);\n\n    projectLI.addEventListener(\'click\', filterTasksByProject);\n}\n\n// function to render Task Creation Form\nfunction renderTaskForm() {\n    console.log(\'yerrr\');\n    let projectModal = document.createElement("div");\n    let taskForm = document.createElement("form");\n    let formHeader = document.createElement("div");\n    let formHeaderText = document.createElement("h1");\n    let formHeaderClose = document.createElement("img");\n    \n    projectModal.classList.add("modal");\n    formHeader.classList.add("form-header");\n    formHeaderClose.classList.add("form-close");\n    taskForm.id = "task-form";\n    formHeaderText.textContent = "New Task";\n    formHeaderClose.src = "../images/x.png";\n    formHeader.append(formHeaderText, formHeaderClose);\n\n    let formName = document.createElement("div");\n    let formNameLabel = document.createElement("label");\n    let formNameInput = document.createElement("input");\n    formName.classList.add("form-input");\n    formNameLabel.textContent = "Task Name";\n    formNameInput.id = "form-task-name";\n    formNameInput.placeholder = "Task Name";\n    formNameInput.type = "text";\n    formName.append(formNameLabel, formNameInput);\n    \n    let formDesc = document.createElement("div");\n    let formDescLabel = document.createElement("label");\n    let formDescInput = document.createElement("textarea");\n    formDesc.classList.add("form-input");\n    formDescLabel.textContent = "Task Description";\n    formDescInput.id = "form-task-description";\n    formDescInput.placeholder = "Task Description";\n    formDescInput.cols = "30";\n    formDescInput.rows = "10";\n    formDesc.append(formDescLabel, formDescInput);\n\n    let formProject = document.createElement("div");\n    let formProjectLabel = document.createElement("label");\n    let formProjectList = document.createElement("select");\n    formProject.classList.add("form-input");\n    formProjectList.id = "task-project-name";\n    formProjectLabel.textContent = "Project";\n\n    //loop throught project list to create options\n    projectList.forEach((project) => {\n        let option = document.createElement("option");\n        option.textContent = project.name;\n        option.value = project.name;\n        formProjectList.append(option);\n    })\n\n    formProject.append(formProjectLabel, formProjectList);\n\n    let formDate = document.createElement("div");\n    let formDateLabel = document.createElement("label");\n    let formDateInput = document.createElement("input")\n    formDate.classList.add("form-input");\n    formDateInput.id = "date-select";\n    formDateInput.type = "date";\n    formDateLabel = "Finish Date";\n    formDate.append(formDateLabel, formDateInput);\n\n    let formSubmitBtn = document.createElement("button");\n    formSubmitBtn.id = "task-submit";\n    formSubmitBtn.textContent = "Submit";\n\n    taskForm.append(formHeader, formName, formDesc, formProject, formDate, formSubmitBtn);\n    projectModal.append(taskForm);\n\n    let body = document.querySelector("body");\n    body.insertBefore(projectModal, body.firstChild);\n\n    taskForm.addEventListener(\'submit\', (e) => {\n        e.preventDefault();\n        if (validateForm(formNameInput, formDescInput)) {\n            let taskNameInput = formNameInput.value.trim();\n            let taskDescInput = formDescInput.value.trim();\n            let projectInput = formProjectList.options[formProjectList.selectedIndex].value;\n            let taskDateInput = formDateInput.value;\n\n            let newTask = new tasks(taskNameInput, taskDescInput, projectInput, taskDateInput);\n            taskList.push(newTask);\n            renderTask(newTask);\n\n            deleteTaskForm();\n        };\n    })\n\n    formHeaderClose.addEventListener(\'click\', deleteTaskForm);\n}\n\n\n// function to render Project Creation Form\nfunction renderProjectForm() {\n    let projectModal = document.createElement("div");\n    let projectForm = document.createElement("form");\n    projectModal.classList.add("project-modal");\n    projectForm.id = "project-form";\n\n    let formHeader = document.createElement("div");\n    let formHeaderTitle = document.createElement("h1");\n    let formHeaderClose = document.createElement("img");\n    formHeaderTitle.textContent = "New Project";\n    formHeaderClose.src = "../images/x.png";\n    formHeader.classList.add("form-header");\n    formHeaderClose.classList.add("project-form-close");\n    formHeader.append(formHeaderTitle, formHeaderClose);\n\n    let formName = document.createElement("div");\n    let formNameLabel = document.createElement("label");\n    let formNameInput = document.createElement("input")\n    formName.classList.add("form-input");\n    formNameLabel.textContent = "Project Name";\n    formNameInput.id = "project-name";\n    formNameInput.type = "text";\n    formNameInput.placeholder = "Project Name";\n    formName.append(formNameLabel, formNameInput);\n\n    let formSubmitBtn = document.createElement("button");\n    formSubmitBtn.id = "project-submit";\n    formSubmitBtn.textContent = "Submit";\n\n    projectForm.append(formHeader, formName, formSubmitBtn);\n    projectModal.append(projectForm);\n\n    let body = document.querySelector("body");\n    body.insertBefore(projectModal, body.firstChild);\n\n    projectForm.addEventListener(\'submit\', (e) => {\n        e.preventDefault();\n        if (validateForm(formNameInput)) {\n            let projectNameInput = formNameInput.value.trim();\n            let projectColour = generateColour();\n            let newProject = new projects(projectNameInput, projectColour)\n            let newProjectOption = document.createElement("option");\n\n            newProjectOption.textContent = newProject.name;\n\n            projectList.push(newProject);\n            renderProject(newProject);\n\n            deleteProjectForm();\n        }\n    })\n\n    formHeaderClose.addEventListener(\'click\', deleteProjectForm);\n}\n\nfunction expandTask(e) {\n    // console.log(e.currentTarget);\n    if (e.currentTarget.classList.contains(\'task-expand\')) {\n        e.currentTarget.classList.remove(\'task-expand\');\n        e.currentTarget.querySelector(\'.task-details\').style.visibility = \'hidden\';\n    } else {\n        e.currentTarget.classList.add(\'task-expand\');\n        e.currentTarget.querySelector(\'.task-details\').style.visibility = \'visible\';\n    }\n}\n\nfunction deleteTask(e) {\n    this.parentNode.parentNode.parentNode.parentNode.remove(); //delete button\n    e.stopPropagation();\n}\n\nfunction completeTask(e) {\n    this.parentNode.parentNode.parentNode.firstChild.firstChild.classList.toggle(\'task-complete\');\n    e.stopPropagation();\n}\n\nfunction toggleMode(e) {\n    let header = document.querySelector(\'header\');\n    let left = document.querySelector(\'.left\');\n    let right = document.querySelector(\'.right\');\n    let tasks = document.querySelectorAll(\'.task-information\');\n\n    e.currentTarget.classList.toggle(\'toggle-active\');\n    header.classList.toggle(\'header-light\');\n    left.classList.toggle(\'left-light\');\n    right.classList.toggle(\'right-light\');\n    tasks.forEach((task) => {\n        task.classList.toggle(\'task-light\');\n    })\n}\n\nfunction deleteTaskForm() {\n    let body = document.querySelector("body");\n    body.firstElementChild.remove();\n}\n\nfunction deleteProjectForm() {\n    let body = document.querySelector("body");\n    body.firstElementChild.remove();\n}\n\nfunction handleEditSubmit(e) {\n    e.preventDefault();\n    console.log("submit working");\n\n    let taskName = document.querySelector(".task-name");\n    let taskDate = document.querySelector(".task-date");\n    let taskNameInput = document.getElementById("update-task-title");\n    let taskDateInput = document.getElementById("update-task-date");\n    let taskTitleDetails = document.querySelector(".task-title-details");\n    let editTaskTitleForm = document.getElementById("update-task-title-form");\n\n    \n    taskName.textContent = taskNameInput.value;\n    taskDate.textContent = taskDateInput.value;\n    \n    taskTitleDetails.style.display = "flex";\n    editTaskTitleForm.style.display = "none";\n\n}\n\nfunction handleDescSubmit(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log("edit desc submit working")\n\n    let taskDetails = document.querySelector(".task-description-text");\n    let editDetailsForm = document.getElementById("update-description-form");\n    let editDetailsInput = document.getElementById("update-description");\n\n    taskDetails.textContent = editDetailsInput.value;\n    taskDetails.style.display = "block";\n    editDetailsForm.style.display = "none";\n\n}\n\nfunction filterTasksByProject(e) {\n    let newTaskList = [];\n    \n    let taskContainer = document.querySelector(".task-container");\n    taskContainer.innerHTML = "";\n\n    if (e.target.textContent == "All Tasks") {\n        taskList.forEach((task) => {\n            renderTask(task);\n        })\n    } else {\n        taskList.forEach((task) => {\n            if (task.project == e.target.textContent) {\n                console.log(task.project);\n                newTaskList.push(task);\n            }\n        })\n    }\n\n    newTaskList.forEach((filteredTask) => {\n        renderTask(filteredTask);\n    })\n}\n\n\n;// CONCATENATED MODULE: ./src/index.js\n\n\nrenderPage();\npopulatePage();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///23\n')}},__webpack_exports__={};__webpack_modules__[23]()})();